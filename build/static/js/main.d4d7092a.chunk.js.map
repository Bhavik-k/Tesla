{"version":3,"sources":["components/header.js","components/section.js","components/home.js","App.js","features/counter/counterAPI.js","features/counter/counterSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["header","Containner","src","height","Menu","href","RMenu","onClick","BurgerNav","show","id","ColseButtonWrapper","ColseButton","styled","div","img","section","props","Wrap","bg","bottom","ItemText","className","title","discri","ButtoGroup","LeftBut","LB","RB","RightBut","DownArrow","home","Container","App","fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","name","initialState","value","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","store","configureStore","reducer","counter","counterReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qPAsDeA,I,YAAAA,EAlDf,WAUI,OACI,eAACC,EAAD,WACI,4BACI,qBAAKC,IAAI,mBAAmBC,OAAO,WAEvC,eAACC,EAAD,WACI,4BAAG,mBAAGC,KAAK,IAAR,uBACH,4BAAG,mBAAGA,KAAK,IAAR,uBACH,4BAAG,mBAAGA,KAAK,IAAR,uBACH,4BAAG,mBAAGA,KAAK,IAAR,uBACH,4BAAG,mBAAGA,KAAK,IAAR,0BACH,4BAAG,mBAAGA,KAAK,IAAR,+BAEP,eAACC,EAAD,WACI,mBAAGD,KAAK,IAAR,kBACA,mBAAGA,KAAK,IAAR,2BACA,qBAAKE,QArBjB,aAqBoCL,IAAI,qBAAqBC,OAAO,YAG5D,eAACK,EAAD,CAAWC,MA3BE,EA2BkBC,GAAG,UAAlC,UACI,cAACC,EAAD,UACA,cAACC,EAAD,CAAaV,IAAI,oBAAqBC,OAAO,WAG7C,6BAAI,mBAAGE,KAAK,IAAR,kCACJ,6BAAI,mBAAGA,KAAK,IAAR,8BACJ,6BAAI,mBAAGA,KAAK,IAAR,wBACJ,6BAAI,mBAAGA,KAAK,IAAR,yBACJ,6BAAI,mBAAGA,KAAK,IAAR,wBACJ,6BAAI,mBAAGA,KAAK,IAAR,kCACJ,6BAAI,mBAAGA,KAAK,IAAR,kCACJ,6BAAI,mBAAGA,KAAK,IAAR,kCACJ,6BAAI,mBAAGA,KAAK,IAAR,kCACJ,6BAAI,mBAAGA,KAAK,IAAR,yCAWdJ,EAAaY,IAAOC,IAAV,sMAWVV,EAAOS,IAAOC,IAAV,+WAmBJR,EAAQO,IAAOC,IAAV,uYAoBLN,EAAYK,IAAOC,IAAV,mXAmBTF,EAAcC,IAAOE,IAAV,iDAGXJ,EAAqBE,IAAOC,IAAV,8E,iBC9FTE,I,EAAAA,EA/Bf,SAAiBC,GAGb,OACI,eAACC,EAAD,CAAMC,GAAMF,EAAMF,IAAlB,UACI,cAAC,IAAD,CAAMK,QAAM,EAAZ,SACI,eAACC,EAAD,WACI,oBAAIC,UAAU,UAAd,SAAyBL,EAAMM,QAC/B,4BAAIN,EAAMO,cAGlB,gCACI,cAAC,IAAD,CAAMJ,QAAM,EAAZ,SACI,eAACK,EAAD,WACI,cAACC,EAAD,UACKT,EAAMU,KAGTV,EAAMW,IACJ,cAACC,EAAD,UACKZ,EAAMW,UAKvB,cAACE,EAAD,CAAW5B,IAAI,kCAQzBgB,EAAOL,IAAOC,IAAV,qUAYc,SAAAG,GAAK,6BAAmBA,EAAME,GAAzB,SAIvBE,EAAWR,IAAOC,IAAV,wHASRW,EAAaZ,IAAOC,IAAV,mPAWVY,EAAUb,IAAOC,IAAV,8UAiBPe,EAAWhB,YAAOa,EAAPb,CAAH,2GAORiB,EAAYjB,IAAOE,IAAV,uHCvCAgB,MAvDf,WACI,OACI,eAACC,EAAD,WACI,cAAC,EAAD,CACIT,MAAM,UACNC,OAAO,sCACPG,GAAG,eACHC,GAAG,qBACHb,IAAI,gBAER,cAAC,EAAD,CACIQ,MAAM,UACNC,OAAO,sCACPG,GAAG,eACHC,GAAG,qBACHb,IAAI,gBAER,cAAC,EAAD,CACIQ,MAAM,UACNC,OAAO,sCACPG,GAAG,eACHC,GAAG,qBACHb,IAAI,gBAER,cAAC,EAAD,CACIQ,MAAM,UACNC,OAAO,sCACPG,GAAG,eACHC,GAAG,qBACHb,IAAI,gBAER,cAAC,EAAD,CACIQ,MAAM,sCACNI,GAAG,YACHC,GAAG,aACHJ,OAAO,uBACPT,IAAI,oBAER,cAAC,EAAD,CACIQ,MAAM,sBACNC,OAAO,0DACPG,GAAG,YACHC,GAAG,aACHb,IAAI,mBAER,cAAC,EAAD,CACIQ,MAAM,cACNC,OAAO,GACPT,IAAI,kBACJY,GAAG,iBAQbK,EAAYnB,IAAOC,IAAV,gDC/CAmB,MATf,WACE,OACE,sBAAKX,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,Q,gCCRC,SAASY,IAAwB,IAAbC,EAAY,uDAAH,EAClC,OAAO,IAAIC,SAAQ,SAACC,GAAD,OACjBC,YAAW,kBAAMD,EAAQ,CAAEE,KAAMJ,MAAW,QCAhD,IAUaK,EAAiBC,YAC5B,qBAD4C,uCAE5C,WAAON,GAAP,eAAAO,EAAA,sEACyBR,EAAWC,GADpC,cACQQ,EADR,yBAGSA,EAASJ,MAHlB,2CAF4C,uDASjCK,EAAeC,YAAY,CACtCC,KAAM,UACNC,aArBmB,CACnBC,MAAO,EACPC,OAAQ,QAqBRC,SAAU,CACRC,UAAW,SAACC,GAKVA,EAAMJ,OAAS,GAEjBK,UAAW,SAACD,GACVA,EAAMJ,OAAS,GAGjBM,kBAAmB,SAACF,EAAOG,GACzBH,EAAMJ,OAASO,EAAOC,UAK1BC,cAAe,SAACC,GACdA,EACGC,QAAQnB,EAAeoB,SAAS,SAACR,GAChCA,EAAMH,OAAS,aAEhBU,QAAQnB,EAAeqB,WAAW,SAACT,EAAOG,GACzCH,EAAMH,OAAS,OACfG,EAAMJ,OAASO,EAAOC,cAKvB,EAAoDZ,EAAakB,QAgBzDlB,GAhBR,EAAQO,UAAR,EAAmBE,UAAnB,EAA8BC,kBAgBtBV,EAAf,SCrEamB,EAAQC,YAAe,CAClCC,QAAS,CACPC,QAASC,K,QCOOC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUZ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJa,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAACC,GAClCA,EAAaC,kB","file":"static/js/main.d4d7092a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\n\r\nfunction header() {\r\n    \r\n    const burgerStatus = false;\r\n\r\n\r\n    function bringout() {\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Containner>\r\n            <a>\r\n                <img src=\"/images/logo.png\" height=\"17px\"/>\r\n            </a>\r\n            <Menu>\r\n                <p><a href=\"#\">Model S</a></p>\r\n                <p><a href=\"#\">Model 3</a></p>\r\n                <p><a href=\"#\">Model X</a></p>\r\n                <p><a href=\"#\">Model Y</a></p>\r\n                <p><a href=\"#\">SOLAR ROOF</a></p>\r\n                <p><a href=\"#\">SOLAR PANELS</a></p>\r\n            </Menu>\r\n            <RMenu>\r\n                <a href=\"#\">shop</a>\r\n                <a href=\"#\">tesla account</a>\r\n                <img onClick={bringout} src=\"/images/burger.svg\" height=\"30px\"/>\r\n            </RMenu>\r\n\r\n            <BurgerNav show={burgerStatus} id=\"sidebar\">\r\n                <ColseButtonWrapper>\r\n                <ColseButton src=\"/images/close.svg\"  height=\"30px\"></ColseButton>\r\n                </ColseButtonWrapper>\r\n                \r\n                <li><a href=\"#\">Existing Inventory</a></li>\r\n                <li><a href=\"#\">used Inventory</a></li>\r\n                <li><a href=\"#\">trade-in</a></li>\r\n                <li><a href=\"#\">cybertruc</a></li>\r\n                <li><a href=\"#\">roadster</a></li>\r\n                <li><a href=\"#\">Existing Inventory</a></li>\r\n                <li><a href=\"#\">Existing Inventory</a></li>\r\n                <li><a href=\"#\">Existing Inventory</a></li>\r\n                <li><a href=\"#\">Existing Inventory</a></li>\r\n                <li><a href=\"#\">Existing Inventory</a></li>\r\n            </BurgerNav>\r\n\r\n        </Containner>\r\n    )\r\n}\r\n\r\nexport default header\r\n\r\n\r\n\r\nconst Containner = styled.div`\r\n    min-height: 50px;\r\n    position: fixed;\r\n    display: flex;\r\n    align-items:center;\r\n    padding: 0 20px;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    z-index:1;\r\n`\r\nconst Menu = styled.div`\r\n    flex: 1;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-weight: 600;\r\n    p{\r\n        text-transformation:uppercase;\r\n        padding:0 10px;\r\n        flex-wrap: no-wrap;\r\n        cursor: pointer;\r\n    }\r\n    @media (max-width: 1172px){\r\n        p{\r\n            display: none;\r\n        }\r\n    }\r\n`\r\n\r\nconst RMenu = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    float:right;\r\n    a{\r\n        text-transformation:uppercase;\r\n        padding:0 10px;\r\n        flex-wrap: no-wrap;\r\n        cursor: pointer;\r\n    }\r\n    img{\r\n        cursor: pointer;\r\n    }\r\n    @media (max-width: 1172px){\r\n        a{\r\n            display: none;\r\n        }\r\n    }\r\n`\r\nconst BurgerNav = styled.div`\r\n    position: fixed;\r\n    top:0;\r\n    bottom:0;\r\n    right:0;\r\n    background:white;\r\n    padding:20px;\r\n    width:300px;\r\n    list-style:none;\r\n    desplay:flex;\r\n    flex-derection: column;\r\n    text-align: start;\r\n    transform:translateX(100%);\r\n    li{\r\n        padding: 20px 0;\r\n        border-bottom:1px solid rgba(0, 0, 0, .1)\r\n    }\r\n`\r\n\r\nconst ColseButton = styled.img`\r\n    cursor:pointer;\r\n`\r\nconst ColseButtonWrapper = styled.div`\r\n    display:flex;\r\n    justify-content:flex-end;\r\n`","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Fade from 'react-reveal/Fade';\r\n\r\n\r\nfunction section(props) {\r\n\r\n    \r\n    return (\r\n        <Wrap bg = {props.img}>\r\n            <Fade bottom>\r\n                <ItemText>\r\n                    <h1 className=\"heading\">{props.title}</h1>\r\n                    <p>{props.discri}</p>\r\n                </ItemText>\r\n            </Fade>\r\n            <div>\r\n                <Fade bottom>\r\n                    <ButtoGroup>\r\n                        <LeftBut>\r\n                            {props.LB}\r\n                        </LeftBut>\r\n\r\n                        { props.RB &&\r\n                            <RightBut>\r\n                                {props.RB}\r\n                            </RightBut>\r\n                        }\r\n                    </ButtoGroup>\r\n                </Fade>\r\n                <DownArrow src=\"/images/down-arrow.svg\"/>\r\n            </div>\r\n        </Wrap>\r\n    )\r\n}\r\n\r\nexport default section\r\n\r\nconst Wrap = styled.div`\r\n    \r\n    scroll-snap-align:start; \r\n\r\n    height: 100vh;\r\n    width: 100vw;\r\n    background-size: cover;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content:space-between;\r\n    background-image: ${props =>`url(\"/images/${props.bg}\")`};\r\n    \r\n\r\n`\r\nconst ItemText = styled.div`\r\n    padding-top: 17vh;\r\n    color: #7f7f7f;\r\n    h1{\r\n        color: #393c41;\r\n    }\r\n    \r\n`\r\n\r\nconst ButtoGroup = styled.div`\r\n    width: 100vw;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-bottom: 10px;\r\n    font-size: 12px;\r\n    @media (max-width: 582px){\r\n        flex-direction: column;\r\n    }\r\n`\r\nconst LeftBut = styled.div`\r\n    background-color: rgb(18, 21, 26);\r\n    color: #fff;\r\n    height: 40px;\r\n    width: 256px;\r\n    display: grid;\r\n    place-items: center;\r\n    border-radius:999px;\r\n    cursor: pointer;\r\n    text-transform: uppercase;\r\n    margin: 8px;\r\n\r\n    @media (max-width: 582px){\r\n        width: 100vw;\r\n    }\r\n\r\n`\r\nconst RightBut = styled(LeftBut)`\r\n    background-color: rgb(255, 255, 255);\r\n    opacity: .7;\r\n    color: #000;\r\n`\r\n\r\n\r\nconst DownArrow = styled.img`\r\n    margin-top: 20px;\r\n    height: 40px;\r\n    \r\n    animation: anymateDown infinite 1.5s;\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Section from './section'\r\n\r\nfunction home() {\r\n    return (\r\n        <Container>\r\n            <Section\r\n                title=\"Model S\"\r\n                discri=\"Order Online for Touchless Delivery\"\r\n                LB=\"COSTOM ORDER\"\r\n                RB=\"EXISTING INVENTORY\"\r\n                img=\"model-s.jpg\"\r\n            />\r\n            <Section\r\n                title=\"Model Y\"\r\n                discri=\"Order Online for Touchless Delivery\"\r\n                LB=\"COSTOM ORDER\"\r\n                RB=\"EXISTING INVENTORY\"\r\n                img=\"model-y.jpg\"\r\n            />\r\n            <Section\r\n                title=\"Model 3\"\r\n                discri=\"Order Online for Touchless Delivery\"\r\n                LB=\"COSTOM ORDER\"\r\n                RB=\"EXISTING INVENTORY\"\r\n                img=\"model-3.jpg\"\r\n            />\r\n            <Section\r\n                title=\"Model X\"\r\n                discri=\"Order Online for Touchless Delivery\"\r\n                LB=\"COSTOM ORDER\"\r\n                RB=\"EXISTING INVENTORY\"\r\n                img=\"model-x.jpg\"\r\n            />\r\n            <Section\r\n                title=\"Lowest Cost Solar Panels in America\"\r\n                LB=\"ORDER now\"\r\n                RB=\"learn more\"\r\n                discri=\"Money-back guarantee\"\r\n                img=\"solar-panel.jpg\"\r\n            />\r\n            <Section\r\n                title=\"Solar for New Roofs\"\r\n                discri=\"Solar Roof Costs Less Than a New Roof Plus Solar Panels\"\r\n                LB=\"ORDER now\"\r\n                RB=\"learn more\"\r\n                img=\"solar-roof.jpg\"\r\n            />\r\n            <Section\r\n                title=\"Accessories\"\r\n                discri=\"\"\r\n                img=\"accessories.jpg\"\r\n                LB=\"shop now\"\r\n            />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default home\r\n\r\nconst Container = styled.div`\r\n    height: 100vh;\r\n`","import React from 'react';\nimport './App.css';\nimport Header from \"./components/header.js\"\nimport Home from \"./components/home.js\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}